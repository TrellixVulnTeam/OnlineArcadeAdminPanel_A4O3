{"ast":null,"code":"var _jsxFileName = \"/Users/suneilengland/Desktop/DEVELOPMENT/maj-arcade-admin/src/components/customer/CustomerListResults.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport AccountProfileDetails from \"../account/AccountProfileDetails\";\nimport { Avatar, Box, Card, CardContent, CardHeader, Divider, Grid, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport getInitials from \"src/utils/getInitials\";\nimport { db } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 500,\n    overflow: \"auto\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst CustomerListResults = ({\n  user,\n  ...rest\n}) => {\n  _s();\n\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  const [address, setAddress] = useState(user.address);\n  const [phone, setPhone] = useState(user.phone);\n  const [pin, setPin] = useState(user.pin_chain);\n  const [acceptDate, setAcceptDate] = useState(user.accept_date);\n  const [igc, setIgc] = useState(user.igc);\n  const [lockAccount, setLockAccount] = useState(user.account_locked);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = event => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = customers.map(customer => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, selectedIndex), selectedCustomerIds.slice(selectedIndex + 1));\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const updateUser = async () => {\n    const loggedUser = {\n      name: name,\n      email: email,\n      pin: pin,\n      phone: phone,\n      address: address,\n      account_locked: lockAccount,\n      accept_date: acceptDate,\n      igc: igc\n    };\n    const addTransaction = {\n      _id: user._id,\n      name: name,\n      email: email,\n      totalIGC: igc,\n      sign: \"+\"\n    };\n    await axios // .post(`https://majestic-express-server.herokuapp.com/api/auth/updateuser/${user._id}`, loggedUser)\n    .post(`http://localhost:5000/api/auth/updateuser/${user._id}`, loggedUser).then(res => console.log(res.data)).catch(error => console.log(error.message));\n    await axios // .post(`https://majestic-express-server.herokuapp.com/api/auth/addtransaction`, addTransaction)\n    .post(`http://localhost:5000/api/auth/addtransaction`, addTransaction).then(res => console.log(res.data)).catch(error => console.log(error.message));\n  };\n\n  const deleteUser = async () => {\n    await axios // .post(`http://localhost:5000/api/auth/deleteuser/${user._id}`)\n    .post(`https://majestic-express-server.herokuapp.com/api/auth/deleteuser/${user._id}`).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error.error);\n    });\n  }; //* Modal code\n  // const classes = useStyles();\n  // // getModalStyle is not a pure function, we roll the style only on the first render\n  // const [modalStyle] = useState(getModalStyle);\n  // const [open, setOpen] = useState(false);\n  // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n  // const body = (\n  //   <div style={modalStyle} className={classes.paper}>\n  //     <AccountProfileDetails users={users} />\n  //   </div>\n  // );\n\n\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mb: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            subheader: \"The information can be edited\",\n            title: `${user.name} - ${user._id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  helperText: \"Please specify the first name\",\n                  label: \"Name\",\n                  name: \"firstName\",\n                  onChange: e => setName(e.target.value),\n                  required: true,\n                  defaultValue: user.name // value={name}\n                  ,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Email Address\",\n                  name: \"email\",\n                  onChange: e => setEmail(e.target.value),\n                  required: true // value={user.email}\n                  ,\n                  defaultValue: user.email,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Address\",\n                  name: \"Address\",\n                  onChange: e => setAddress(e.target.value),\n                  defaultValue: user.address // value={user.address}\n                  ,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Phone number\",\n                  name: \"phone\",\n                  onChange: e => setPhone(e.target.value),\n                  required: true // value={user.phone}\n                  ,\n                  defaultValue: user.phone,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Pin Number\",\n                  name: \"pin\",\n                  onChange: e => setPin(e.target.value),\n                  type: \"number\" // value={user.pin_chain}\n                  ,\n                  defaultValue: user.pin_chain,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Accepted Date\",\n                  name: \"Date\",\n                  onChange: e => setAcceptDate(e.target.value),\n                  defaultValue: user.accept_date // value={user.accept_date}\n                  ,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"User IGC\",\n                  name: \"user igc\",\n                  onChange: e => setIgc(e.target.value),\n                  type: \"text\" // value={user.igc}\n                  ,\n                  defaultValue: \"0\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Lock Account\",\n                  name: \"Lock\",\n                  onChange: e => setLockAccount(e.target.value),\n                  required: true,\n                  select: true,\n                  SelectProps: {\n                    native: true\n                  },\n                  defaultValue: user.account_locked // value={user.account_locked}\n                  ,\n                  variant: \"outlined\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: false,\n                    children: \"Unlocked\"\n                  }, false, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: true,\n                    children: \"Locked\"\n                  }, true, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              p: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: async () => {\n                  deleteUser();\n                },\n                color: \"error\",\n                variant: \"contained\",\n                children: \"Delete user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: updateUser,\n                color: \"primary\",\n                variant: \"contained\",\n                children: \"Save details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerListResults, \"dJbla88wCd/SYqPw0ejiU0NpVAY=\");\n\n_c = CustomerListResults;\nCustomerListResults.propTypes = {// customers: PropTypes.array.isRequired,\n};\nexport default CustomerListResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerListResults\");","map":{"version":3,"sources":["/Users/suneilengland/Desktop/DEVELOPMENT/maj-arcade-admin/src/components/customer/CustomerListResults.js"],"names":["useState","useEffect","React","PropTypes","Link","RouterLink","useLocation","moment","PerfectScrollbar","AccountProfileDetails","Avatar","Box","Card","CardContent","CardHeader","Divider","Grid","TextField","axios","makeStyles","Button","Menu","MenuItem","getInitials","db","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","overflow","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","CustomerListResults","user","rest","name","setName","email","setEmail","address","setAddress","phone","setPhone","pin","setPin","pin_chain","acceptDate","setAcceptDate","accept_date","igc","setIgc","lockAccount","setLockAccount","account_locked","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","handleSelectAll","newSelectedCustomerIds","target","checked","customers","map","customer","id","handleSelectOne","selectedIndex","indexOf","concat","slice","length","handleLimitChange","value","handlePageChange","newPage","updateUser","loggedUser","addTransaction","_id","totalIGC","sign","post","then","res","console","log","data","catch","error","message","deleteUser","response","e","native","display","justifyContent","p","propTypes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport AccountProfileDetails from \"../account/AccountProfileDetails\";\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport getInitials from \"src/utils/getInitials\";\nimport { db } from \"../../firebase\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 500,\n    overflow: \"auto\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst CustomerListResults = ({ user, ...rest }) => {\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  const [address, setAddress] = useState(user.address);\n  const [phone, setPhone] = useState(user.phone);\n  const [pin, setPin] = useState(user.pin_chain);\n  const [acceptDate, setAcceptDate] = useState(user.accept_date);\n  const [igc, setIgc] = useState(user.igc);\n  const [lockAccount, setLockAccount] = useState(user.account_locked);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds,\n        id\n      );\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(1)\n      );\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, -1)\n      );\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const updateUser = async () => {\n    const loggedUser = {\n      name: name,\n      email: email,\n      pin: pin,\n      phone: phone,\n      address: address,\n      account_locked: lockAccount,\n      accept_date: acceptDate,\n      igc: igc,\n    };\n\n    const addTransaction = {\n      _id: user._id,\n      name: name,\n      email: email,\n      totalIGC: igc,\n      sign: \"+\"\n    }\n\n    await axios\n      // .post(`https://majestic-express-server.herokuapp.com/api/auth/updateuser/${user._id}`, loggedUser)\n      .post(`http://localhost:5000/api/auth/updateuser/${user._id}`, loggedUser)\n      .then((res) => console.log(res.data))\n      .catch((error) => console.log(error.message));\n\n      await axios\n      // .post(`https://majestic-express-server.herokuapp.com/api/auth/addtransaction`, addTransaction)\n      .post(`http://localhost:5000/api/auth/addtransaction`, addTransaction)\n      .then((res) => console.log(res.data))\n      .catch((error) => console.log(error.message));\n  }\n\n  const deleteUser = async () => {\n    await axios\n    // .post(`http://localhost:5000/api/auth/deleteuser/${user._id}`)\n    .post(`https://majestic-express-server.herokuapp.com/api/auth/deleteuser/${user._id}`,)\n\n    .then((response) => {\n      console.log(response.data)\n    })\n    .catch((error) => {\n      console.log(error.error)\n    })\n  }\n  //* Modal code\n\n  // const classes = useStyles();\n  // // getModalStyle is not a pure function, we roll the style only on the first render\n  // const [modalStyle] = useState(getModalStyle);\n  // const [open, setOpen] = useState(false);\n\n  // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n\n  // const body = (\n  //   <div style={modalStyle} className={classes.paper}>\n  //     <AccountProfileDetails users={users} />\n  //   </div>\n  // );\nconsole.log(user)\n  return (\n    <div>\n        <Box mb={6}>\n          <form autoComplete=\"off\" noValidate>\n            <Card>\n              <CardHeader\n                subheader=\"The information can be edited\"\n                title={`${user.name} - ${user._id}`}\n              />\n              <Divider />\n              <CardContent>\n                <Grid container spacing={3}>\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      fullWidth\n                      helperText=\"Please specify the first name\"\n                      label=\"Name\"\n                      name=\"firstName\"\n                      onChange={(e) => setName(e.target.value)}\n                      required\n                      defaultValue={user.name}\n                      // value={name}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email Address\"\n                      name=\"email\"\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                      // value={user.email}\n                      defaultValue={user.email}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Address\"\n                      name=\"Address\"\n                      onChange={(e) => setAddress(e.target.value)}\n                      defaultValue={user.address}\n                      // value={user.address}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Phone number\"\n                      name=\"phone\"\n                      onChange={(e) => setPhone(e.target.value)}\n                      required\n                      // value={user.phone}\n                      defaultValue={user.phone}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Pin Number\"\n                      name=\"pin\"\n                      onChange={(e) => setPin(e.target.value)}\n                      type=\"number\"\n                      // value={user.pin_chain}\n                      defaultValue={user.pin_chain}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Accepted Date\"\n                      name=\"Date\"\n                      onChange={(e) => setAcceptDate(e.target.value)}\n                      defaultValue={user.accept_date}\n                      // value={user.accept_date}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"User IGC\"\n                      name=\"user igc\"\n                      onChange={(e) => setIgc(e.target.value)}  \n                      type=\"text\"\n                      // value={user.igc}\n                      defaultValue=\"0\"\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Lock Account\"\n                      name=\"Lock\"\n                      onChange={(e) => setLockAccount(e.target.value)}  \n                      required\n                      select\n                      SelectProps={{ native: true }}\n                      defaultValue={user.account_locked}\n                      // value={user.account_locked}\n                      variant=\"outlined\"\n                    >\n                      <option key={false} value={false}>\n                        Unlocked\n                      </option>\n                      <option key={true} value={true}>\n                        Locked\n                      </option>\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </CardContent>\n              <Divider />\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  p: 2,\n                }}\n              >\n                <Grid item md={6} xs={12}>\n                  <Button onClick={async() => {\n                     deleteUser()\n                     }} color=\"error\" variant=\"contained\">\n                    Delete user\n                  </Button>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Button onClick={updateUser} color=\"primary\" variant=\"contained\">\n                    Save details\n                  </Button>\n                </Grid>\n              </Box>\n            </Card>\n          </form>{\" \"}\n        </Box>\n    </div>\n  );\n};\n\nCustomerListResults.propTypes = {\n  // customers: PropTypes.array.isRequired,\n};\n\nexport default CustomerListResults;\n"]},"metadata":{},"sourceType":"module"}