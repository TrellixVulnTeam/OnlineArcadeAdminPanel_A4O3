{"ast":null,"code":"var _jsxFileName = \"/Users/suneilengland/Desktop/DEVELOPMENT/maj-arcade-admin/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, Container, FormHelperText, Link, TextField, Typography } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Register | Material Kit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            firstName: '',\n            lastName: '',\n            password: '',\n            policy: false\n          },\n          validationSchema: Yup.object().shape({\n            email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            firstName: Yup.string().max(255).required('First name is required'),\n            lastName: Yup.string().max(255).required('Last name is required'),\n            password: Yup.string().max(255).required('password is required'),\n            phone: Yup.string().max(255).required('phone number is required'),\n            policy: Yup.boolean().oneOf([true], 'This field must be checked')\n          }),\n          onSubmit: async initialValues => {\n            // const createMongoUser = async () => {\n            const loggedUser = {\n              first_name: initialValues.firstName,\n              last_name: initialValues.lastName,\n              phone: initialValues.phone,\n              email: initialValues.email,\n              password: initialValues.password\n            };\n            await axios // .post(`https://majestic-express-server.herokuapp.com/api/auth/register`, loggedUser)\n            .post(`https://majestic-express-server.herokuapp.com/api/auth/registeradmin`, loggedUser).then(res => {\n              const result = res.data;\n              localStorage.setItem(\"authToken\", result.token);\n\n              if (localStorage.getItem('authToken')) {\n                navigate('/app/dashboard', {\n                  replace: true\n                }); // console.log('hey')\n              }\n\n              console.log(result);\n            }).catch(err => console.log(err.response.data.error)); // };\n            // navigate('/app/dashboard', { replace: true });\n          },\n          children: ({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"h2\",\n                children: \"Create new account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                variant: \"body2\",\n                children: \"Use your email to create new account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.firstName && errors.firstName),\n              fullWidth: true,\n              helperText: touched.firstName && errors.firstName,\n              label: \"First name\",\n              margin: \"normal\",\n              name: \"firstName\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.firstName,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.lastName && errors.lastName),\n              fullWidth: true,\n              helperText: touched.lastName && errors.lastName,\n              label: \"Last name\",\n              margin: \"normal\",\n              name: \"lastName\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.lastName,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.email && errors.email),\n              fullWidth: true,\n              helperText: touched.email && errors.email,\n              label: \"Email Address\",\n              margin: \"normal\",\n              name: \"email\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"email\",\n              value: values.email,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.password && errors.password),\n              fullWidth: true,\n              helperText: touched.password && errors.password,\n              label: \"Password\",\n              margin: \"normal\",\n              name: \"password\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"password\",\n              value: values.password,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.phone && errors.phone),\n              fullWidth: true,\n              helperText: touched.phone && errors.phone,\n              label: \"phone\",\n              margin: \"normal\",\n              name: \"phone\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"phone\",\n              value: values.phone,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                alignItems: 'center',\n                display: 'flex',\n                ml: -1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: values.policy,\n                name: \"policy\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body1\",\n                children: [\"I have read the\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                  color: \"primary\",\n                  component: RouterLink,\n                  to: \"#\",\n                  underline: \"always\",\n                  variant: \"h6\",\n                  children: \"Terms and Conditions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), Boolean(touched.policy && errors.policy) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: errors.policy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                py: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                disabled: isSubmitting,\n                fullWidth: true,\n                size: \"large\",\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Sign up now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body1\",\n              children: [\"Have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                component: RouterLink,\n                to: \"/login\",\n                variant: \"h6\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/suneilengland/Desktop/DEVELOPMENT/maj-arcade-admin/src/pages/Register.js"],"names":["Link","RouterLink","useNavigate","Helmet","axios","Yup","Formik","Box","Button","Checkbox","Container","FormHelperText","TextField","Typography","useEffect","Register","navigate","backgroundColor","display","flexDirection","height","justifyContent","email","firstName","lastName","password","policy","object","shape","string","max","required","phone","boolean","oneOf","initialValues","loggedUser","first_name","last_name","post","then","res","result","data","localStorage","setItem","token","getItem","replace","console","log","catch","err","response","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","values","mb","Boolean","alignItems","ml","py"],"mappings":"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","sourcesContent":["import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios'\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { useEffect } from 'react';\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Helmet>\n        <title>Register | Material Kit</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              policy: false\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                phone: Yup.string().max(255).required('phone number is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={async(initialValues) => {\n              // const createMongoUser = async () => {\n                const loggedUser = {\n                  first_name: initialValues.firstName,\n                  last_name: initialValues.lastName,\n                  phone: initialValues.phone,\n                  email: initialValues.email,\n                  password: initialValues.password\n                };\n            \n                await axios\n                  // .post(`https://majestic-express-server.herokuapp.com/api/auth/register`, loggedUser)\n                  .post(`https://majestic-express-server.herokuapp.com/api/auth/registeradmin`, loggedUser)\n                  .then((res) => {\n                    const result = res.data\n                    localStorage.setItem(\"authToken\", result.token)\n                    if(localStorage.getItem('authToken')){\n                      navigate('/app/dashboard', { replace: true });\n                      // console.log('hey')\n                    }\n                    console.log(result)\n                  })\n                  .catch((err) => console.log(err.response.data.error));\n              // };\n              // navigate('/app/dashboard', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                 <TextField\n                  error={Boolean(touched.phone && errors.phone)}\n                  fullWidth\n                  helperText={touched.phone && errors.phone}\n                  label=\"phone\"\n                  margin=\"normal\"\n                  name=\"phone\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"phone\"\n                  value={values.phone}\n                  variant=\"outlined\"\n                />\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    ml: -1\n                  }}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link> \n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}